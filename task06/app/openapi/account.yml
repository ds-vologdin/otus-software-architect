openapi: '3.0.2'
info:
  title: Account service
  version: '1.0'
servers:
  - url: https://arch.homework/
paths:
  /auth/:
    get:
      description: Check a password and return ID of an user
      security:
        - basicAuth: []
      responses:
        '200':
          description: Return ID of an user
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int64
                    example: 642
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'

  /profile/:
    post:
      description: Create new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
      responses:
        '201':
          description: Created an user
          content:
            application/json:
              schema:
                type: object
                properties:
                  ID:
                    type: integer
                    format: int64
                    example: 642
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'

  /profile/{userId}:
    get:
      description: Get user profile
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Return user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileWithoutPassword'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
    delete:
      description: Delete user
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Deleted an user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OK'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
    patch:
      description: Change user profile
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Changed user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OK'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'
    post:
      description: Update user profile
      parameters:
        - $ref: '#/components/parameters/UserId'
      responses:
        '200':
          description: Updated user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OK'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/InternalError'

components:
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  parameters:
    UserId:
      name: userId
      in: path
      description: User ID
      required: true
      schema:
        type: integer
        format: int64
        example: 642

  responses:
    UnauthorizedError:
      description: Authentication information is missing or invalid
      headers:
        WWW_Authenticate:
          schema:
            type: string
      content:
        text/plain:
          schema:
            type: string
            example: authorization failed
    Forbidden:
      description: Access forbidden
      content:
        text/plain:
          schema:
            type: string
            example: authorization failed
    InternalError:
      description: Internal error
      content:
        text/plain:
          schema:
            type: string
            example: request failed

  schemas:
    Profile:
      type: object
      properties:
        username:
          type: string
          example: bob
        password:
          type: string
          example: password
        first_name:
          type: string
          example: bob
        last_name:
          type: string
          example: brown
        email:
          type: string
          example: bob@email.com
        phone:
          type: string
          example: +79330003322
      required:
        - username
        - password
        - first_name
        - last_name
        - email
        - phone
    ProfileWithoutPassword:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 642
        username:
          type: string
          example: bob
        first_name:
          type: string
          example: bob
        last_name:
          type: string
          example: brown
        email:
          type: string
          example: bob@email.com
        phone:
          type: string
          example: +79330003322
      required:
        - id
        - username
        - first_name
        - last_name
        - email
        - phone
    OK:
      type: object
      properties:
        status:
          type: string
          example: OK

security:
  - basicAuth: []
  - bearerAuth: []
